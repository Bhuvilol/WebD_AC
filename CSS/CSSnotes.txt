* Basis Format of CSS 
	selector {
		property : value ;
		}
----------------------------------------------------------------------------------------
* CSS References :
https://developer.mozilla.org/en-US/docs/Web/CSS/Reference
-----------------------------------------------------------------------------------------
* How to include Styles?
	- Inline Styles
		eg - <h1 style = "color: red"> Bhabesh Behera </h1>
	- Using the style tag inside head block
		eg - <style>
				h1 {
					color : red ;
				}
			</style>
	- External Stylesheet inside head block
		eg - <link rel = "stylesheet" href="xyz.css">
		css file :-
				selector {
					property : value ;
				}
----------------------------------------------------------------------------------------
* Property :-
	$ color ~ used to set the color of foreground
	$ background-color ~ used to set the color of background
	$ text properties :-
			text-align : (center),(left/start),(right/end),(justify) ;
				this property is not absolute to document, it is relative to its parent 

			font-weight : (100-900),(normal~400),(bold~700),(bolder),(lighter) ;

			text-decoration : (underline),(overline),(line-through),(none) ;
					mdn reference :- https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration

			line-height : (normal),(2.5) ; 
					controls the height of the line of the text

			letter-spacing : (normal),(10px) ;
					controls the horizontal spacing behavior between text characters
			font-size : (15px) ;

				"96 px = 1 inch"
				
			font-family :  (impact),(Segoe UI),(fantasy);
			font- familt : ('avant garde', 'didot', 'sans-serif') ;
				this specifies a priotised list of one or more font familt name.
				ref = https://www.cssfontstack.com/
----------------------------------------------------------------------------------------
Selctors : 
	1 - Universal Selector - to select everything in a document
			*{
				property : value;
			}
	2 - Element Selector - selects all elements of the same type
			ElementSelector{
						property : value;
						}
			eg : h1, h2{
					color : blue;
				}
	3 - ID Selector - selects an element based on the value of the element's id attribute
			#myId{
				property : value;
			}
	4 - Class Selector - selects an element based on their class attribute
			.myclass{
				property : value;
			}
	5 - Descendant Selectors - can hold sccount on multiple levels separated by " " inside a tag
			eg : div p{
				property : value;
			}
			- this selcts all paragraphs inside divs
	
	6 - Attribute Selector - Selects elements based on the presence or value of a given attribute
			eg : input[attr="value"]{
					property : value;
				}
--------------------------------------------------------------------------------------------
* Selector Combinators :-
	eg : p + h3 {
			property : value;
		}

	+ = sibling/next Combinator
	> = child Combinator
---------------------------------------------------------------------------------------------
* Pseudo Class - A keyword to a selector that specifies a sspecial state of the selected elements
	element:hover
	element:active - used for buttons or text field
	element:checked - used for radio buttons or check boxes
	element:nth-of-type - used for selecting nth element of a given sequence among sibling of same type

* Pseudo Elements - a keyword added to a selector that lets you style a specific part of the selected elements
	element::first-letter
	element::first-line
	element::selection

---------------------------------------------------------------------------------------------
* What is cascade in CSS?
	The CSS cascade algorithm's job is to select CSS declaration in
	order to determine the correct values for CSS properties.

* Cascading property - apply the style added latermost(of the same type)

* Selector Specificity - Specificity is an algorithm that calculates the weight that is applied to a given CSS declaration

	inline style	|		id		|		class			|		element
					|				|		attribute		|		pseudo-element
					|				|		pseudo-class 	|
					|				|						|
					|				|						|
	inline style > id > class > element

* !important - to show the most specific thing in document
		eg : h2{
				color: white !important;
			}
---------------------------------------------------------------------------------------------
* Inheritance in CSS - inherits its parent/grandparent/greatgrandparent blocks properties
* Use of Color Palettes 
---------------------------------------------------------------------------------------------
* Box model in CSS
	~ Height: (100px;)
		- by default it sets the 'content area height' of the content
	~ Width: (100px;)
		- by default, it sets the 'content area width' of the element
	~ Border = used to set an element's border
		border-width
		border-style: (solid),(dashed)
		border-color

		- Border Shorthand = width|style|color
		eg :- div{
				5px solid black;
			}
		- Border sides = to control an individual side of a box
			> border-left
			> border-right
			> border-top
			> border-bottom

		- Border radius = used to round the corners of an element's outer border edge
			border-radius: (15px),(50%);
		ref = https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius
	~ Padding
		padding-left
		padding-right
		padding-top
		padding-bottom

		- Padding Shorthand :-
		#1 - for all sides
				eg:- padding: 50px
		#2 - top & bottom|left & right
				eg:- padding: 1px 2px;
		#3 - top|left & right|bottom
				eg:- padding 1px 2px 3px;
		#4 - top|right|bottom|left   //clockwise direction
				eg:- padding: 10px, 20px, 30px,20px;
	~ Margin
		margin-left
		margin-right
		margin-top
		margin-bottom

		- Margin Shorthand :-
		#1 - for all sides
				eg:- margin: 50px
		#2 - top & bottom|left & right
				eg:- margin: 1px 2px;
		#3 - top|left & right|bottom
				eg:- margin 1px 2px 3px;
		#4 - top|right|bottom|left   //clockwise direction
				eg:- margin: 10px, 20px, 30px,20px;

---------------------------------------------------------------------------------------------
Block & Inline 
Conclusions 
BLOCK 										INLINE
Always start on a new line 					Do not start on a new line 

Take up as much horizontal 					Only use as much horizontal space
space as possible (the full 				as required by the content.Do not 
width of the container or 					accept width and height CSS properties 
browser window if there is 
no container) 

Will respect width and height 				Margins will work horizontally,
CSS properties 								but not vertically 

Horizontal and vertical margins 			Padding works on all sides, but
both work 									the top and bottom may overlap 
											other elements. 
 

----------------------------------------------------------------------------------------------
* Display - It sets whether an element is treated as a block or inline element and the layout used
			for its children
		display: inline
		display: block
	ref :- https://developer.mozilla.org/en-US/docs/Web/CSS/display

---------------------------------------------------------------------------------------------
* Units in CSS
	absolute				relative
		px						%
		pt						em
		pc						rem
		cm						ch
		mm						vh
		in						vw + many more

	~ Percentage(%) - It is often used to define a size as relative to an element's parent object.
		eg:- width : 33.33%   //relative to the parent
			 margin-left : 50%    // relative to the parent size

	~ em - relative to font size of the parent, in the case of topographical properties like
			font-size, and font size of the element itself, in the case of other properties like width.

	~ rem - relative to font size of the root element